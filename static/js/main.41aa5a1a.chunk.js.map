{"version":3,"sources":["components/styles/Global.js","components/styles/Container.styled.js","components/styles/Messages.styled.js","theme.js","components/styles/Logo.styled.js","components/Logo.js","components/styles/Message.styled.js","components/Message.js","components/styles/InputForm.styled.js","firebase.js","components/InputForm.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","default","body","text","large","Container","styled","div","MessagesContainer","accent","StyledLogo","Logo","username","useContext","AppContext","StyledMessage","user","Message","message","StyledForm","form","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","InputForm","useState","setMessage","type","placeholder","value","onChange","e","target","disabled","onClick","preventDefault","collection","add","timestamp","FieldValue","serverTimestamp","createContext","App","setUsername","messages","setMessages","messagesRef","useRef","useEffect","prompt","orderBy","onSnapshot","snapshot","docs","map","doc","data","current","scrollTop","scrollHeight","Provider","ref","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41aa5a1a.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\t\r\n\t* {\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\t\tbox-sizing: border-box;\r\n\t\ttransition: 0.3s ease;\r\n\t}\r\n\r\n\tbody {\r\n\t\tbackground-color: ${({theme}) => theme.default.body};\r\n\t\tfont-family: 'Montserrat', sans-serif;\r\n\t\tcolor: ${({theme}) => theme.default.text};\r\n\t}\r\n\r\n\thtml {\r\n\t\tscroll-behaviour: smooth;\r\n\t}\r\n\r\n\r\n\r\n\t/*@media(min-width: ${({ theme }) => theme.large}) {\r\n\t\thtml {\r\n\t\t\tfont-size: 20px;\r\n\t\t}\r\n\t}*/\r\n`;\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tmax-width: 70rem;\r\n\tpadding: 0 1.3rem;\r\n\tmargin: 0 auto;\r\n\r\n\t@media(max-width: 450px) {\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n`;","import styled from 'styled-components';\r\n\r\nexport const MessagesContainer = styled.div`\r\n    max-height: 90vh;\r\n    padding: 0 1rem;\r\n    margin-top: 5rem;\r\n    overflow-y: scroll;\r\n    margin-bottom: 5rem;\r\n\r\n    ::-webkit-scrollbar {\r\n        background-color: #ccc;\r\n        width: 0.4rem;\r\n        border-radius: 0.3rem;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: #aaa;\r\n        width: 0.4rem;\r\n        border-radius: 0.3rem;\r\n    }\r\n`;","const theme = {\r\n  default: {\r\n    accent: '#442ef1',\r\n    body: '#e5e1fd',\r\n    text: '#0a043c',\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default theme\r\n\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLogo = styled.div`\r\n\t\r\n\ttext-align: center;\r\n\tmargin: 0 auto 1.5rem;\r\n\tpadding: 1rem 0;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\tz-index: 10;\r\n\tbackground-color: ${({theme}) => theme.default.body};\r\n\r\n\th1 {\r\n\t\tfont-size: 1.5rem;\r\n\t\tcolor: ${({theme}) => theme.default.text};\r\n\t\tmargin-bottom: 0.5rem;\r\n\r\n\t\tspan {\r\n\t\t\tcolor: ${({theme}) => theme.default.accent};\r\n\t\t}\r\n\t}\r\n\r\n\tp {\r\n\t\tfont-size: 0.9rem;\r\n\t}\r\n\r\n\r\n\t@media(max-width: 450px) {\r\n\t\t\r\n\t\tpadding: 0.4rem 0;\r\n\t}\r\n\r\n`;","import { useContext } from 'react';\r\nimport {StyledLogo} from './styles/Logo.styled';\r\nimport { AppContext } from '../App';\r\n\r\nconst Logo = () => {\r\n\r\n\tconst { username } = useContext(AppContext);\r\n\r\n\treturn ( \r\n\t<StyledLogo>\r\n\t\t<h1>Worldie<span>Chat</span></h1> \r\n\t\t<p>Welcome, {username}</p>\r\n\t</StyledLogo>\t)\r\n}\r\n\r\nexport default Logo","import styled from 'styled-components';\r\n\r\nexport const StyledMessage = styled.div`\r\n\r\n\twidth: fit-content;\r\n\tmax-width: 75vw;\r\n\tmargin-bottom: 0.3rem;\t\r\n\tmargin-left: ${({user}) => user ? 'auto' : 'none'};\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tanimation: slide 0.5s forwards;\r\n\r\n\tspan {\r\n\t\tmargin-bottom: 0.1rem;\r\n\t\tfont-size: 0.8rem;\r\n\t\tmargin-left: ${({user}) => user ? 'auto' : 'none'};\r\n\t\tcolor: #aaa;\r\n\t}\r\n\r\n\tdiv {\r\n\t\tpadding: 0.5rem;\r\n\t\tbackground-color: ${({ user, theme }) => user ? theme.default.accent : '#fff'};\r\n\t\tcolor: ${({ user, theme }) => user ? '#fff' : theme.default.text};\r\n\t\tborder-radius: 0.6rem;\r\n\t\tfont-size: 1rem;\r\n\t}\r\n\r\n\r\n\t@media(max-width: 450px)  {\r\n\t\t\r\n\t\tdiv {\r\n\t\t\tfont-size: 0.8rem;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t@keyframes slide {\r\n\t\tfrom {\r\n\t\t\ttransform: scale(0.6);\r\n\t\t\topacity: 0.7;\r\n\t\t}\r\n\r\n\t\tto {\r\n\t\t\ttransform: scale(1);\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n`;","import { useContext } from 'react';\r\nimport {StyledMessage} from './styles/Message.styled';\r\nimport { AppContext } from '../App';\r\n\r\n\r\nconst Message = ({ message }) => {\r\n\r\n\tconst { username } = useContext(AppContext);\r\n\r\n\r\n\treturn (\r\n\t\t<StyledMessage user={message.user === username}>\r\n\t\t\t{ message.user !== username && <span>{message.user || 'unknown user'}</span> }\r\n\t\t\t<div>{message.message}</div>\r\n\t\t</StyledMessage>\r\n\t)\r\n}\r\n\r\nexport default Message","import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.form`\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tposition: fixed;\r\n\tbottom: 0.1rem;\r\n\tleft: 0.1rem;\r\n\tright: 0.1rem;\r\n\tbackground-color: #fff;\r\n\tpadding: 0.5rem 1rem;\r\n\r\n\r\n\tinput {\r\n\t\twidth: 100%;\r\n\t\tborder: none;\r\n\t\toutline: none;\r\n\t\tborder-bottom: 0.1rem solid ${({theme}) => theme.default.accent};\r\n\t\tmargin-right: 0.2rem;\r\n\t\tfont-family: inherit;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tpadding: 0.5rem 1rem;\r\n\t\toutline: none;\r\n\t\tborder: none;\r\n\t\tborder-radius: 0.5rem;\r\n\t\tbackground-color: ${({theme}) => theme.default.accent};\r\n\t\tcolor: #fff;\r\n\t\tfont-family: inherit;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\tbutton:disabled {\r\n\t\tbackground-color: #bbb;\r\n\t\tcolor: #000;\r\n\t}\r\n`;","import firebase from \"firebase\";\r\n\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAK8b2csMiC6IFHD1cuMPTLsg2GLm21v-A\",\r\n  authDomain: \"worldie-chat-test.firebaseapp.com\",\r\n  projectId: \"worldie-chat-test\",\r\n  storageBucket: \"worldie-chat-test.appspot.com\",\r\n  messagingSenderId: \"602758191701\",\r\n  appId: \"1:602758191701:web:87c9164e0aa35ba96f92dc\",\r\n  measurementId: \"G-S2FEYHKSHM\"\r\n});\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","import { useState, useContext } from 'react'\r\nimport { AppContext } from '../App'\r\nimport {StyledForm} from './styles/InputForm.styled';\r\nimport db from '../firebase';\r\nimport firebase from 'firebase';\r\n\r\nconst InputForm = () => {\r\n\r\n\tconst { username } = useContext(AppContext);\r\n\tconst [message, setMessage] = useState('');\r\n\r\n\tconst sendMessage = (e) => {\r\n\t\te.preventDefault();\r\n\t\t// setMessages([...messages, {\r\n\t\t// \tuser: username,\r\n\t\t// \tmessage: message\r\n\t\t// }]);\r\n\r\n\t\tdb.collection('messages').add({\r\n\t\t\tuser: username,\r\n\t\t\tmessage: message,\r\n\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t})\r\n\t\tsetMessage('');\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<StyledForm>\r\n\t\t\t<input type=\"text\" placeholder='Enter message...' value={message} onChange={(e) => setMessage(e.target.value)} />\r\n\t\t\t<button type='submit' disabled={!message} onClick={ sendMessage } >Send</button>\r\n\t\t</StyledForm>\r\n\t)\r\n}\r\n\r\nexport default InputForm","import { useState, useEffect, createContext, useRef } from 'react'\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from './components/styles/Global';\nimport {Container} from './components/styles/Container.styled';\nimport {MessagesContainer} from './components/styles/Messages.styled';\nimport theme from './theme';\nimport Logo from './components/Logo';\nimport Message from './components/Message';\nimport InputForm from './components/InputForm';\nimport db from './firebase';\n\n\nexport const AppContext = createContext(null);\n\n\nfunction App() {\n\n  const [username, setUsername] = useState('');\n\n  const [messages, setMessages] = useState([  ]);\n\n  const messagesRef = useRef(null);\n\n\n  useEffect(() => {\n    setUsername(prompt('What is your name?'));\n  }, [ ]);\n\n  useEffect(() => {\n    db.collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot => {\n      // console.log(snapshot.docs.map(doc => doc.data()));\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    })\n  }, [ ])\n\n\n  // For scrolling to the bottom of the messages when a message is sent\n  useEffect(() => {\n    messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n    // return messagesRef;\n\n    return(messagesRef);\n  }, [messages])\n\n\n\n\n  return (\n    <AppContext.Provider value={ {username, setUsername, messages, setMessages} }>\n      <ThemeProvider theme= { theme } >\n        <GlobalStyles />     \n          <Logo />\n          <Container>\n            <MessagesContainer ref={ messagesRef } >\n              { messages.map(item => <Message key={item.message} message={item} />) }\n            </MessagesContainer>\n            <InputForm />\n          </Container>\n      </ThemeProvider>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}